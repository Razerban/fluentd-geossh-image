# Input plugin that exposes metrics to Prometheus
<source>
  @type prometheus
  @id source_promtheus
  @log_level warn
</source>

# Input plugin that exports exports Fluentd internal metrics
<source>
  @type monitor_agent
  @id source_monitor_agent
  @log_level warn
</source>

# Input plugin that receives metrics from other Fluentd instances
<source>
  @type forward
</source>

# Input plugin that collects metrics from MonitorAgent
<source>
  @type prometheus_monitor
  @id source_prometheus_monitor
  @log_level warn
</source>

# Input plugin that collects metrics for output plugin
<source>
  @type prometheus_output_monitor
  @id source_prometheus_output_monitor
  @log_level warn
</source>

# Input plugin that collects metrics for in_tail plugin
<source>
  @type prometheus_tail_monitor
  @id source_prometheus_tail_monitor
  @log_level warn
</source>

# Input plugin that to read events from the tail of text files
<source>
  @type tail
  @id source_tail
  @log_level warn

  path /var/log/auth.log
  pos_file /fluentd/data/auth.pos
  tag log.auth

  <parse>
    @type syslog

    message_format rfc3164
    with_priority false
    keep_time_key false
  </parse>
</source>

# Filter plugin that parses the "message" field in event records
# and extracts the failed authentication attempt information (username, ip address, port).
<filter log.auth>
  @type parser
  @id filter_parser
  @log_level warn

  key_name message
  reserve_data true
  remove_key_name_field true
  emit_invalid_record_to_error false

  <parse>
    @type multi_format

    <pattern>
      format regexp
      expression /^Invalid user (?<username>[^ ]*) from (?<ip_address>((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}) port (?<port>((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4})))$/
    </pattern>

    <pattern>
      format regexp
      expression /^Failed password for invalid user (?<username>[^ ]*) from (?<ip_address>((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}) port (?<port>((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))) ssh2$/
    </pattern>

    <pattern>
      format regexp
      expression /^Disconnected from invalid user (?<username>[^ ]*) (?<ip_address>((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}) port (?<port>((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))) \[preauth\]$/
    </pattern>
  </parse>
</filter>

# Filter plugin that rewrites tags on records.
# It changes the tag of the successfully parsed records to "log.auth.matched"
# and the tag of the records to be ignored to "log.auth.ignored"
<match log.auth>
  @type rewrite_tag_filter
  @id filter_rewrite_tag_filter
  @log_level warn

  <rule>
    key message
    pattern /.*/
    tag log.auth.ignored
  </rule>

  <rule>
    key username
    pattern /.*/
    tag log.auth.matched
  </rule>
</match>

# Filter plugin that fetched the geographical location of the IP addresses in the records.
<filter log.auth.matched>
  @type ipinfo
  @id filter_ipinfo
  @log_level warn

  key_name ip_address
  out_key ipinfo
  fields ["country_name", "region", "city", "latitude", "longitude"]
</filter>

# Filter plugin that mutates the records to delete the fields that are not necessary
# and create new ones from the fields data in the record.
<filter log.auth.matched>
  @type record_modifier
  @id filter_record_modifier
  @log_level warn

  remove_keys host, ident, pid, ipinfo

  <record>
    city ${record["ipinfo"]["city"]}
    region ${record["ipinfo"]["region"]}
    country ${record["ipinfo"]["country_name"]}
    location ${record["ipinfo"]["city"]}, ${record["ipinfo"]["region"]}, ${record["ipinfo"]["country_name"]}
    latitude ${record["ipinfo"]["latitude"]}
    longitude ${record["ipinfo"]["longitude"]}
    value ${1.0} # Force the value to be float by using embedded ruby code
  </record>
</filter>

# Filter plugin that creates a Prometheus metric exposing the total number of incoming records by tags.
<filter log.**>
  @type prometheus
  @id filter_prometheus
  @log_level warn

  <metric>
    name fluentd_input_status_num_records_total
    type counter
    desc The total number of incoming records
    <labels>
      tag ${tag}
    </labels>
  </metric>
</filter>

# Output plugin that exports the processed records (tag: log.auth.matched) to "stdout" and "influxdb".
<match log.auth.matched>
  @type copy
  @id output_copy
  @log_level warn

  copy_mode no_copy

  <store>
    @type influxdb
    @id store_influxdb
    @log_level warn

    host influxdb
    port 8086
    user sshd
    password sshd
    dbname sshd
    measurement geossh
    use_ssl false
    verify_ssl false
    time_precision ms
    tag_keys ["username", "ip_address", "port", "city", "region", "country", "location", "latitude", "longitude"]
    cast_number_to_float false

    <buffer>
      @type memory
      @id buffer_memory

      flush_at_shutdown true
      flush_mode interval
      flush_interval 5s
      retry_forever true
      retry_wait 1s
      retry_type periodic
    </buffer>
  </store>

  <store>
    @type stdout
    @id store_stdout
    @log_level warn
  </store>
</match>

# Output plugin that drops the ignored records (tag: log.auth.ignored).
<match log.auth.ignored>
  @type null
  @id output_null
  @log_level warn
</match>

<label @FLUENT_LOG>
  <match fluent.*>
    @type stdout
  </match>
</label>